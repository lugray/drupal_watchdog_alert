<?php

/**
 * @file
 * Implement hooks for the Database Logging Alert module
 */

/**
 * Implements hook_cron().
 *
 * Controls the size of the dismissed alerts table, removing unneeded entries
 * that have corresponding watchdog events that have been removed from the dblog
 * log table, or alert types that have been deleted.
 */
function watchdog_alert_cron() {
  $watchdog_ids = db_select('watchdog', 'w')
      ->fields('w', array('wid'));
  $alert_ids = db_select('watchdog_alert_alerts', 'daa')
      ->fields('daa', array('aid'));
  db_delete('watchdog_alert_dismissed')
      ->condition(db_or()
          ->condition('wid', $watchdog_ids, 'NOT IN')
          ->condition('aid', $alert_ids, 'NOT IN')
      )
      ->execute();
}

/**
 * Implements hook_page_build().
 *
 * Creates the necessary calls to drupal_set_message().  This hook is used to
 * ensure this takes place after any alert dismissal, and after any redirects
 * which reset the drupal_static() used in _watchdog_alert_set_alert().
 */
function watchdog_alert_page_build(&$page) {
  if (user_access('access site reports')) {
    module_load_include('admin.inc', 'watchdog_alert');
    global $user;
    $roles = $user->roles;
    if ($user->uid == 1) {
      $roles += user_roles();
    }
    $alerts = watchdog_alert_get_alerts(array_keys($roles));

    foreach ($alerts as $alert) {
      $alert->filter = unserialize($alert->filter);
      $dismissed = db_select('watchdog_alert_dismissed', 'dad')
          ->fields('dad', array('wid'));
      if (!$alert->dismiss_for_all) {
        $dismissed->condition('dad.uid', $user->uid);
      }
      $dblogs = db_select('watchdog', 'w');
      $dblogs->leftJoin($dismissed, 'dad', 'dad.wid = w.wid');
      $dblogs
          ->fields('w', array('wid', 'message', 'variables', 'severity'))
          ->condition('dad.wid', NULL);
      foreach ($alert->filter as $key => $values) {
        if (!empty($values)) {
          $dblogs->condition('w.' . $key, $values, 'IN');
        }
      }
      drupal_set_message($dblogs);
      $dblogs = $dblogs->execute();

      foreach ($dblogs as $dblog) {
        _watchdog_alert_set_alert($alert, $dblog);
      }
    }
  }
}

/**
 * Implements hook_menu().
 */
function watchdog_alert_menu() {
  return array(
    'admin/config/development/watchdog_alert' => array(
      'title' => 'Log Message Alerts',
      'description' => 'Create alerts for certain kinds of logged messages.',
      'page callback' => '_watchdog_alert_settings',
      'access arguments' => array('administer site configuration'),
      'file' => 'watchdog_alert.admin.inc',
    ),
    'admin/config/development/watchdog_alert/new' => array(
      'title' => 'Create New Alert',
      'page callback' => 'drupal_get_form',
      'page arguments' => array('_watchdog_alert_edit_form'),
      'access arguments' => array('administer site configuration'),
      'file' => 'watchdog_alert.admin.inc',
    ),
    'admin/config/development/watchdog_alert/%/edit' => array(
      'title' => 'Edit Alert',
      'page callback' => 'drupal_get_form',
      'page arguments' => array('_watchdog_alert_edit_form', 4),
      'access arguments' => array('administer site configuration'),
      'file' => 'watchdog_alert.admin.inc',
    ),
    'admin/config/development/watchdog_alert/%/delete' => array(
      'title' => 'Delete Alert',
      'page callback' => 'drupal_get_form',
      'page arguments' => array('_watchdog_alert_delete_form', 4),
      'access arguments' => array('administer site configuration'),
      'file' => 'watchdog_alert.admin.inc',
    ),
    'admin/config/development/watchdog_alert/dismiss/%/%' => array(
      'title' => 'Dismiss Alert',
      'page callback' => '_watchdog_alert_dismiss_page',
      'page arguments' => array(5, 6),
      'access arguments' => array('access site reports'),
      'file' => 'watchdog_alert.admin.inc',
    ),
  );
}
